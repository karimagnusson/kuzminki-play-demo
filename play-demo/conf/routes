# Routes
# This file defines all application routes (Higher priority routes first)
# https://www.playframework.com/documentation/latest/ScalaRouting
# ~~~~

# An example controller showing a sample home page
GET     /                           controllers.HomeController.index()

# Map static resources from the /public folder to the /assets URL path

# SELECT

GET     /assets/*file               controllers.Assets.versioned(path="/public", file: Asset)

GET     /actor/result1                        controllers.SelectController.actorResult1

GET     /actor/result2                        controllers.SelectController.actorResult2

GET     /actor/result3                        controllers.SelectController.actorResult3

GET     /actor/result4                        controllers.SelectController.actorResult4

GET     /actor/result5/:actorId               controllers.SelectController.actorResult5(actorId: Int)

GET     /film/modified-cols/:filmId           controllers.SelectController.filmModifiedCols(filmId: Int)

GET     /film/search-option                   controllers.SelectController.filmSearchOption

GET     /film/search-or/:text                 controllers.SelectController.filmSearchOr(text: String)

GET     /film/offset/:minYear/:offset         controllers.SelectController.filmOffset(minYear: Int, offset: Int)

GET     /film/stream                          controllers.SelectController.streamFilms

GET     /actors/film-join/:filmId             controllers.JoinController.actorsFilmJoin(filmId: Int)

GET     /actors/film-nested/:filmId           controllers.JoinController.actorsFilmNested(filmId: Int)

GET     /customer/payment/:storeId            controllers.JoinController.customerPayment(storeId: Int)

GET     /customer/or-and/:storeId             controllers.JoinController.customerOrAnd(storeId: Int)

GET     /film/length                          controllers.AggregationController.filmLength

GET     /rental/data                          controllers.AggregationController.rentalData

GET     /customer/spending/:storeId           controllers.AggregationController.customerSpending(storeId: Int)

GET     /customer/low-spending/:storeId       controllers.AggregationController.customerLowSpending(storeId: Int)

# INSERT

POST    /insert/actor1                        controllers.InsertController.insertActor1

POST    /insert/actor2                        controllers.InsertController.insertActor2

POST    /insert/actor3                        controllers.InsertController.insertActor3

POST    /insert/actors/list                   controllers.InsertController.insertActorsList

POST    /insert/actors/stream-list            controllers.InsertController.insertActorsStreamList

POST    /insert/store/do-nothing              controllers.InsertController.insertStoreDoNothing

POST    /insert/store/do-update               controllers.InsertController.insertStoreDoUpdate

POST    /insert/actors/from-customer          controllers.InsertController.insertActorsFromCustomer

POST    /insert/actors/from-file              controllers.InsertController.insertActorsFromFile

POST    /insert/staff/from-file               controllers.InsertController.insertStaffFromFile

# UPDATE

POST    /update/staff1                        controllers.UpdateController.updateStaff1

POST    /update/staff2                        controllers.UpdateController.updateStaff2

POST    /update/staff3                        controllers.UpdateController.updateStaff3

POST    /update/film/increment/:filmId        controllers.UpdateController.filmIncrement(filmId: Int)

POST    /update/staff/cache                   controllers.UpdateController.staffUpdateCache

POST    /update/staff/from-file               controllers.UpdateController.updateFromFile

# DELETE

DELETE  /delete/inactive-staff                controllers.DeleteController.deleteInactiveStaff

DELETE  /delete/staff/from-file               controllers.DeleteController.deleteFromFile

# JSON

GET     /json/films/:year                     controllers.JsonController.jsonFilms(year: Int)

GET     /json/film/:filmId                    controllers.JsonController.jsonFilm(filmId: Int)

POST    /json/insert                          controllers.JsonController.jsonInsert






